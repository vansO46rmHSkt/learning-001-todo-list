{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "ECS template to Next.js app",
  "Parameters": {
    "BaseStackName": {
      "Description": "The name of an existing base stack for launching the ECS.",
      "Type": "String",
      "ConstraintDescription": "must be the name of an existing stack name."
    },
    "VPCStackName": {
      "Description": "The name of an existing VPC stack for launching the ECS.",
      "Type": "String",
      "ConstraintDescription": "must be the name of an existing stack name."
    },
    "ALBStackName": {
      "Description": "The name of an existing ALB stack for launching the ECS.",
      "Type": "String",
      "ConstraintDescription": "must be the name of an existing stack name."
    },
    "DynamoDBStackName": {
      "Description": "The name of an existing dynamodb stack",
      "Type": "String",
      "ConstraintDescription": "must be the name of an existing stack name."
    }
  },
  "Resources": {
    "IAMRoleForECSTaskExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "temp-nextjs-test-for-ecs-task-execution-iam-role",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": "ecs-tasks.amazonaws.com"
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "AccessToCloudWatch",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream"
                  ],
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                }
              ]
            }
          },
          {
            "PolicyName": "ECRGetImage",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:BatchGetImage",
                    "ecr:GetDownloadUrlForLayer",
                    "ecr:BatchCheckLayerAvailability"
                  ],
                  "Resource": [
                    {
                      "Fn::ImportValue": {
                        "Fn::Sub": "${BaseStackName}-ECRRepositoryArn"
                      }
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": "ecr:GetAuthorizationToken",
                  "Resource": "*"
                }
              ]
            }
          },
          {
            "PolicyName": "DynamoDBAccessPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:UpdateItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:GetItem",
                    "dynamodb:BatchGetItem",
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:ConditionCheckItem"
                  ],
                  "Resource": [
                    {
                      "Fn::ImportValue": {
                        "Fn::Sub": "${DynamoDBStackName}-DynamoDBTableArn"
                      }
                    },
                    {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::ImportValue": {
                              "Fn::Sub": "${DynamoDBStackName}-DynamoDBTableArn"
                            }
                          },
                          "/index/*"
                        ]
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "ECSCluster": {
      "Type": "AWS::ECS::Cluster",
      "Properties": {
        "ClusterName": "temp-nextjs-test-cluster",
        "CapacityProviders": [
          "FARGATE",
          "FARGATE_SPOT"
        ],
        "DefaultCapacityProviderStrategy": [
          {
            "CapacityProvider": "FARGATE",
            "Weight": 1
          },
          {
            "CapacityProvider": "FARGATE_SPOT",
            "Weight": 1
          }
        ]
      }
    },
    "ECSService": {
      "Type": "AWS::ECS::Service",
      "Properties": {
        "Cluster": {
          "Ref": "ECSCluster"
        },
        "DeploymentController": {
          "Type": "ECS"
        },
        "DeploymentConfiguration": {
          "DeploymentCircuitBreaker": {
            "Enable": true,
            "Rollback": false
          }
        },
        "DesiredCount": 1,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": {
          "AwsvpcConfiguration": {
            "SecurityGroups": [
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${VPCStackName}-ECSSecurityGroupId"
                }
              }
            ],
            "Subnets": [
              {
                "Fn::ImportValue": {
                  "Fn::Sub": "${VPCStackName}-PublicSubnet1"
                }
              }
            ]
          }
        },
        "PlatformVersion": "LATEST",
        "SchedulingStrategy": "REPLICA",
        "ServiceName": "temp-nextjs-test-service",
        "TaskDefinition": {
          "Ref": "ECSTaskDefinition"
        },
        "HealthCheckGracePeriodSeconds": 60,
        "LoadBalancers": [
          {
            "ContainerName": "temp-nextjs-test-container",
            "ContainerPort": 3000,
            "TargetGroupArn": {
              "Fn::ImportValue": {
                "Fn::Sub": "${ALBStackName}-TargetGroup"
              }
            }
          }
        ]
      }
    },
    "ECSTaskDefinition": {
      "Type": "AWS::ECS::TaskDefinition",
      "Properties": {
        "NetworkMode": "awsvpc",
        "Cpu": ".25 vCPU",
        "Memory": 512,
        "ExecutionRoleArn": {
          "Fn::GetAtt": [
            "IAMRoleForECSTaskExecution",
            "Arn"
          ]
        },
        "ContainerDefinitions": [
          {
            "Name": "temp-nextjs-test-container",
            "Image": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::ImportValue": {
                      "Fn::Sub": "${BaseStackName}-ECRRepositoryUri"
                    }
                  },
                  ":latest"
                ]
              ]
            },
            "Cpu": 256,
            "PortMappings": [
              {
                "ContainerPort": 3000,
                "Protocol": "tcp"
              }
            ],
            "Memory": 512,
            "Essential": true
          }
        ]
      }
    }
  },
  "Outputs": {}
}
{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Lambda function urls template to Next.js app",
  "Parameters": {
    "BaseStackName": {
      "Description": "The name of an existing stack for launching the Lambda.",
      "Type": "String",
      "ConstraintDescription": "must be the name of an existing stack name."
    }
  },
  "Resources": {
    "IAMRoleForLambda": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "temp-nextjs-test-for-lambda-iam-role",
              {
                "Ref": "AWS::Region"
              }
            ]
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "sts:AssumeRole"
              ],
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "AccessToCloudWatch",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "logs:CreateLogGroup",
                  "Resource": {
                    "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/temp-nextjs-test-lambda:*"
                    }
                  ]
                }
              ]
            }
          },
          {
            "PolicyName": "ECRGetImage",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ecr:BatchGetImage",
                    "ecr:GetDownloadUrlForLayer"
                  ],
                  "Resource": [
                    {
                      "Fn::ImportValue": {
                        "Fn::Sub": "${BaseStackName}-ECRRepositoryArn"
                      }
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "Lambda": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "temp-nextjs-test-lambda",
        "PackageType": "Image",
        "Code": {
          "ImageUri": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::ImportValue": {
                    "Fn::Sub": "${BaseStackName}-ECRRepositoryUri"
                  }
                },
                ":latest"
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IAMRoleForLambda",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "AWS_LWA_INVOKE_MODE": "response_stream"
          }
        }
      }
    },
    "LambdaUrl": {
      "Type": "AWS::Lambda::Url",
      "Properties": {
        "AuthType": "NONE",
        "InvokeMode": "RESPONSE_STREAM",
        "TargetFunctionArn": {
          "Fn::GetAtt": [
            "Lambda",
            "Arn"
          ]
        }
      }
    },
    "InvokeLambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunctionUrl",
        "FunctionUrlAuthType": "NONE",
        "FunctionName": {
          "Fn::GetAtt": [
            "Lambda",
            "Arn"
          ]
        },
        "Principal": "*"
      }
    },
    "CloudFrontDistribution": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Origins": [
            {
              "Id": "Origin1",
              "DomainName": {
                "Fn::Select": [
                  2,
                  {
                    "Fn::Split": [
                      "/",
                      {
                        "Fn::GetAtt": [
                          "LambdaUrl",
                          "FunctionUrl"
                        ]
                      }
                    ]
                  }
                ]
              },
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": [
                  "TLSv1.2"
                ]
              }
            }
          ],
          "Enabled": "true",
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "ViewerProtocolPolicy": "redirect-to-https",
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "OriginRequestPolicyId": "b689b0a8-53d0-40ab-baf2-68738e2966ac",
            "Compress": true,
            "TargetOriginId": "Origin1"
          },
          "PriceClass": "PriceClass_200",
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": "true"
          }
        }
      }
    }
  },
  "Outputs": {
    "Url": {
      "Value": {
        "Fn::GetAtt": [
          "LambdaUrl",
          "FunctionUrl"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Url"
        }
      }
    }
  }
}